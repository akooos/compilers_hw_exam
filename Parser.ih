// Generated by Bisonc++ V4.12.03 on Sat, 17 Oct 2015 13:02:48 +0200

    // Include this file in the sources of the class Parser.

// $insert class.h
#include "Parser.h"


inline void Parser::error(const std::stringstream &strm){
    std::cerr << d_loc__.first_line <<": Szemantikus hiba! -> " << strm.str().c_str() << std::endl; 
    exit(3);
}
inline void Parser::error(char const *msg)
{
    std::cerr << d_loc__.first_line <<": Szintaktikus hiba!" << std::endl; 
    exit(2);
}

inline bool Parser::isDeclared( const std::string & id ) const{
  return tblSymbols.count(id) > 0 ;
}
// $insert lex
inline int Parser::lex()
{    
    int ret = lexer.yylex();
    /* Átadom hogy szintaktikus elemző tudja hol jár a lexer...*/
    d_loc__.first_line = lexer.lineno();

    switch(ret){
	case Parser::ID:{
           d_val__.szoveg = new std::string(lexer.YYText());
	   return ret;	 
	}
        case Parser::INTEGER:{
           d_val__.szoveg = new std::string(lexer.YYText());
	   return ret;	 
	}

	default:
	    return ret;
    }

}

inline void Parser::print()         
{
    print__();           // displays tokens if --print was specified
}

inline void Parser::exceptionHandler__(std::exception const &exc)         
{
    throw;              // re-implement to handle exceptions thrown by actions
}


    // Add here includes that are only required for the compilation 
    // of Parser's sources.



    // UN-comment the next using-declaration if you want to use
    // int Parser's sources symbols from the namespace std without
    // specifying std::

//using namespace std;
